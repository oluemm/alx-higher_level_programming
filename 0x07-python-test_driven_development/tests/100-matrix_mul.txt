==============================
How to Use 100-matrix_mul.py
==============================

This module multiplies 2 matrices.
=====
Usage
=====
``def matrix_mul(m_a, m_b)``
>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

=============
Normal Test
=============
>>> print(matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
[[7, 10], [15, 22]]

>>> print(matrix_mul([[1, 2]], [[3, 4], [5, 6]]))
[[13, 16]]

=========================================
Testing floats and int mixture
=========================================
>>> print(matrix_mul([[1, 3], [3, 4]], [[4, 2.3], [3, 4]]))
[[13, 14.3], [24, 22.9]]

=========================================
Testing floats
=========================================
>>> print(matrix_mul([[0.1, 3.7], [1.3, 4.7]], [[7.4, 2.3], [3.8, 1.4]]))
[[14.8, 5.41], [27.48, 9.57]]

=========================================
Testing Error checkers
=========================================
>>> a = [[]]
>>> b = [[1, 2,3], [2,3, 4]]
>>> print(matrix_mul(a, b))
Traceback (most recent call last):
...
TypeError: m_a can't be empty

>>> b = []
>>> a = [[1, 2,3], [2,3, 4]]
>>> print(matrix_mul(a, b))
Traceback (most recent call last):
...
TypeError: m_b can't be empty

>>> a = [['a', 2, 4], [2, 2, 4]]
>>> b = [[1, 2,3], [2,3, 4]]
>>> print(matrix_mul(a, b))
Traceback (most recent call last):
...
TypeError: m_a should contain only integers or floats

>>> a = [[2 , 4], [4, 3]]
>>> b = [[1, 2, 3], [2,3, 4], [4, 2, 7]]
>>> print(matrix_mul(a, b))
Traceback (most recent call last):
...
ValueError: m_a and m_b can't be multiplied

>>> b = [[2 , 4, 5, 6], [1, 3, 4, 3]]
>>> a = [[1, 2, 3], [2,3, 4], [4, 2, 7]]
>>> print(matrix_mul(a, b))
Traceback (most recent call last):
...
ValueError: m_a and m_b can't be multiplied


>>> a = [[[2 , 4], [5, 6]], [[1, 3], [4, 3]]]
>>> b = [[1, 2, 3], [2,3, 4], [4, 2, 7]]
>>> print(matrix_mul(a, b))
Traceback (most recent call last):
...
TypeError: m_a should contain only integers or floats